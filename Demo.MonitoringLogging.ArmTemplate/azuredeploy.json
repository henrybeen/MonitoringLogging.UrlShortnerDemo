{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "discriminator": {
      "type": "string",
      "minLength": 1
    },
    "sqlServerPassword": {
      "type": "securestring",
      "minLength": 1
    }
  },
  "variables": {
    "applicationInsightsName": "[concat(parameters('discriminator'), '-url-shortener')]",
    "storageAccountName": "[concat(parameters('discriminator'), 'shortener')]",
    "storageAccountid": "[concat(resourceGroup().id,'/providers/','Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
    "redisCacheName": "[concat(parameters('discriminator'), '-url-shortener')]",
    "serviceBusNamespaceName": "[concat(parameters('discriminator'), '-url-shortener')]",
    "aliasReportingQueueName": "aliasReport",
    "aliasReportingAuthorizationRuleName": "aliasReporting",
    "aliasAddedTopicName": "aliasAdded",
    "aliasAddedSenderAuthorizationRuleName": "aliasAddedSender",
    "aliasAddedListenerAuthorizationRuleName": "aliasAddedListener",
    "aliasAddedToRedisSubscriptionName": "aliasAddedToRedis",
    "aliasAddedToDatabaseSubscriptionName": "aliasAddedToDatabase",
    "functionHostingPlanName": "[concat(parameters('discriminator'), '-url-shortener')]",
    "mainFunctionAppName": "[concat(parameters('discriminator'), '-url-shortener-main')]",
    "loadgenFunctionAppName": "[concat(parameters('discriminator'), '-url-shortener-loadgen')]",
    "reportingFunctionAppName": "[concat(parameters('discriminator'), '-url-shortener-reporting')]",
    "sqlServerName": "[concat(parameters('discriminator'), '-url-shortener')]",
    "sqlserverUsername": "demo",
    "sqlDatabaseName": "url-shortener"
  },
  "resources": [
    {
      "apiVersion": "2014-04-01",
      "name": "[variables('applicationInsightsName')]",
      "type": "Microsoft.Insights/components",
      "location": "[resourceGroup().location]",
      "properties": {
        "applicationId": "[variables('applicationInsightsName')]"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageAccountName')]",
      "apiVersion": "2016-12-01",
      "location": "[resourceGroup().location]",
      "kind": "Storage",
      "sku": {
        "name": "Standard_LRS"
      }
    },
    {
      "apiVersion": "2015-08-01",
      "name": "[variables('redisCacheName')]",
      "type": "Microsoft.Cache/Redis",
      "location": "[resourceGroup().location]",
      "properties": {
        "enableNonSslPort": "false",
        "sku": {
          "capacity": "0",
          "family": "C",
          "name": "Basic"
        }
      }
    },
    {
      "apiVersion": "2017-04-01",
      "name": "[variables('serviceBusNamespaceName')]",
      "type": "Microsoft.ServiceBus/namespaces",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Standard"
      },
      "resources": [
        {
          "apiVersion": "2017-04-01",
          "name": "[variables('aliasReportingQueueName')]",
          "type": "Queues",
          "dependsOn": [
            "[concat('Microsoft.ServiceBus/namespaces/', variables('serviceBusNamespaceName'))]"
          ],
          "resources": [
            {
              "type": "AuthorizationRules",
              "apiVersion": "2017-04-01",
              "name": "[variables('aliasReportingAuthorizationRuleName')]",
              "dependsOn": [
                "[variables('aliasReportingQueueName')]"
              ],
              "properties": {
                "rights": [
                  "Send", "Listen"
                ]
              }
            }
          ]
        },
        {
          "apiVersion": "2017-04-01",
          "name": "[variables('aliasAddedTopicName')]",
          "type": "Topics",
          "dependsOn": [
            "[concat('Microsoft.ServiceBus/namespaces/', variables('serviceBusNamespaceName'))]"
          ],
          "resources": [
            {
              "type": "AuthorizationRules",
              "apiVersion": "2017-04-01",
              "name": "[variables('aliasAddedSenderAuthorizationRuleName')]",
              "dependsOn": [
                "[variables('aliasAddedTopicName')]"
              ],
              "properties": {
                "rights": [
                  "Send"
                ]
              }
            },
            {
              "type": "AuthorizationRules",
              "apiVersion": "2017-04-01",
              "name": "[variables('aliasAddedListenerAuthorizationRuleName')]",
              "dependsOn": [
                "[variables('aliasAddedTopicName')]"
              ],
              "properties": {
                "rights": [
                  "Listen"
                ]
              }
            },
            {
              "type": "Subscriptions",
              "apiVersion": "2017-04-01",
              "name": "[variables('aliasAddedToRedisSubscriptionName')]",
              "dependsOn": [
                "[variables('aliasAddedTopicName')]"
              ],
              "properties": {
                "lockDuration": "PT1M",
                "requiresSession": "false",
                "defaultMessageTimeToLive": "PT2H",
                "deadLetteringOnMessageExpiration": "true",
                "maxDeliveryCount": "3"
              }
            },
            {
              "type": "Subscriptions",
              "apiVersion": "2017-04-01",
              "name": "[variables('aliasAddedToDatabaseSubscriptionName')]",
              "dependsOn": [
                "[variables('aliasAddedTopicName')]"
              ],
              "properties": {
                "lockDuration": "PT1M",
                "requiresSession": "false",
                "defaultMessageTimeToLive": "PT2H",
                "deadLetteringOnMessageExpiration": "true",
                "maxDeliveryCount": "3",
                "forwardTo": "[variables('aliasReportingQueueName')]"
              }
            }
          ]
        }
      ]
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2015-04-01",
      "name": "[variables('functionHostingPlanName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "name": "[variables('functionHostingPlanName')]",
        "computeMode": "Dynamic",
        "sku": "Dynamic"
      },
      "resources": [
        {
          "apiVersion": "2015-08-01",
          "type": "Microsoft.Web/sites",
          "name": "[variables('mainFunctionAppName')]",
          "location": "[resourceGroup().location]",
          "kind": "functionapp",
          "dependsOn": [
            "[resourceId('Microsoft.Web/serverfarms', variables('functionHostingPlanName'))]",
            "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
          ],
          "properties": {
            "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('functionHostingPlanName'))]"
          },
          "resources": [
            {
              "apiVersion": "2015-08-01",
              "name": "appsettings",
              "type": "config",
              "dependsOn": [
                "[variables('mainFunctionAppName')]"
              ],
              "properties": {
                "AzureWebJobsDashboard": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]",
                "AzureWebJobsStorage": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]",
                "FUNCTIONS_EXTENSION_VERSION": "~2",
                "APPINSIGHTS_INSTRUMENTATIONKEY": "[reference(resourceId('microsoft.insights/components/', variables('applicationInsightsName')), '2015-05-01').InstrumentationKey]",
                "FUNCTIONS_WORKER_RUNTIME": "dotnet",
                "WEBSITE_RUN_FROM_PACKAGE": "1",
                "ServiceBus.AliasAddedTopicName": "[variables('aliasAddedTopicName')]",
                "ServiceBus.AliasAddedSenderConnectionString": "[replace(listKeys(resourceId('Microsoft.ServiceBus/namespaces/topics/authorizationRules', variables('serviceBusNamespaceName'), variables('aliasAddedTopicName'), variables('aliasAddedSenderAuthorizationRuleName')),'2015-08-01').primaryConnectionString, concat(';EntityPath=', variables('aliasAddedTopicName')), '')]",
                "ServiceBus.AliasAddedListenerConnectionString": "[replace(listKeys(resourceId('Microsoft.ServiceBus/namespaces/topics/authorizationRules', variables('serviceBusNamespaceName'), variables('aliasAddedTopicName'), variables('aliasAddedListenerAuthorizationRuleName')),'2015-08-01').primaryConnectionString, concat(';EntityPath=', variables('aliasAddedTopicName')), '')]",
                "ServiceBus.AliasAddedToRedisSubscriptionName": "[variables('aliasAddedToRedisSubscriptionName')]",
                "Redis.ConnectionString": "[concat(variables('redisCacheName'), '.redis.cache.windows.net:6380,password=', listKeys(resourceId('Microsoft.Cache/Redis', variables('redisCacheName')), '2016-04-01').primaryKey, ',ssl=True,abortConnect=False')]"
              }
            }
          ]
        },
        {
          "apiVersion": "2015-08-01",
          "type": "Microsoft.Web/sites",
          "name": "[variables('loadgenFunctionAppName')]",
          "location": "[resourceGroup().location]",
          "kind": "functionapp",
          "dependsOn": [
            "[resourceId('Microsoft.Web/serverfarms', variables('functionHostingPlanName'))]",
            "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
          ],
          "properties": {
            "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('functionHostingPlanName'))]"
          },
          "resources": [
            {
              "apiVersion": "2015-08-01",
              "name": "appsettings",
              "type": "config",
              "dependsOn": [
                "[variables('loadgenFunctionAppName')]"
              ],
              "properties": {
                "AzureWebJobsDashboard": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]",
                "AzureWebJobsStorage": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]",
                "FUNCTIONS_EXTENSION_VERSION": "~2",
                "APPINSIGHTS_INSTRUMENTATIONKEY": "[reference(resourceId('microsoft.insights/components/', variables('applicationInsightsName')), '2015-05-01').InstrumentationKey]",
                "FUNCTIONS_WORKER_RUNTIME": "dotnet",
                "WEBSITE_RUN_FROM_PACKAGE": "1",
                "MainFunctions.BaseUrl": "[concat('http://', variables('mainFunctionAppName') ,'.azurewebsites.net')]",
                "Redis.ConnectionString": "[concat(variables('redisCacheName'), '.redis.cache.windows.net:6380,password=', listKeys(resourceId('Microsoft.Cache/Redis', variables('redisCacheName')), '2016-04-01').primaryKey, ',ssl=True,abortConnect=False')]"
              }
            }
          ]
        },
        {
          "apiVersion": "2015-08-01",
          "type": "Microsoft.Web/sites",
          "name": "[variables('reportingFunctionAppName')]",
          "location": "[resourceGroup().location]",
          "kind": "functionapp",
          "dependsOn": [
            "[resourceId('Microsoft.Web/serverfarms', variables('functionHostingPlanName'))]",
            "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
          ],
          "properties": {
            "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('functionHostingPlanName'))]"
          },
          "resources": [
            {
              "apiVersion": "2015-08-01",
              "name": "appsettings",
              "type": "config",
              "dependsOn": [
                "[variables('reportingFunctionAppName')]"
              ],
              "properties": {
                "AzureWebJobsDashboard": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]",
                "AzureWebJobsStorage": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]",
                "FUNCTIONS_EXTENSION_VERSION": "~2",
                "APPINSIGHTS_INSTRUMENTATIONKEY": "[reference(resourceId('microsoft.insights/components/', variables('applicationInsightsName')), '2015-05-01').InstrumentationKey]",
                "FUNCTIONS_WORKER_RUNTIME": "dotnet",
                "WEBSITE_RUN_FROM_PACKAGE": "1",
                "ServiceBus.AliasReportingQueueName": "[variables('aliasReportingQueueName')]",
                "ServiceBus.AliasReportingConnectionString": "[replace(listKeys(resourceId('Microsoft.ServiceBus/namespaces/queues/authorizationRules', variables('serviceBusNamespaceName'), variables('aliasReportingQueueName'), variables('aliasReportingAuthorizationRuleName')),'2015-08-01').primaryConnectionString, concat(';EntityPath=', variables('aliasReportingQueueName')), '')]",
                "Redis.ConnectionString": "[concat(variables('redisCacheName'), '.redis.cache.windows.net:6380,password=', listKeys(resourceId('Microsoft.Cache/Redis', variables('redisCacheName')), '2016-04-01').primaryKey, ',ssl=True,abortConnect=False')]",
                "SqlDatabase.ConnectionString": "[concat('Server=tcp:',variables('sqlServerName'),'.database.windows.net,1433;Initial Catalog=',variables('sqlDatabaseName'),';Persist Security Info=False;User ID=',variables('sqlServerUsername'),';Password=',parameters('sqlServerPassword'),';MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;')]"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "[variables('sqlServerName')]",
      "type": "Microsoft.Sql/servers",
      "location": "[resourceGroup().location]",
      "apiVersion": "2014-04-01-preview",
      "properties": {
        "administratorLogin": "[variables('sqlserverUsername')]",
        "administratorLoginPassword": "[parameters('sqlServerPassword')]"
      },
      "resources": [
        {
          "name": "AllowAllWindowsAzureIps",
          "type": "firewallrules",
          "location": "[resourceGroup().location]",
          "apiVersion": "2014-04-01-preview",
          "dependsOn": [
            "[resourceId('Microsoft.Sql/servers', variables('sqlServerName'))]"
          ],
          "properties": {
            "startIpAddress": "0.0.0.0",
            "endIpAddress": "0.0.0.0"
          }
        },
        {
          "name": "[variables('sqlDatabaseName')]",
          "type": "databases",
          "location": "[resourceGroup().location]",
          "apiVersion": "2014-04-01-preview",
          "dependsOn": [
            "[resourceId('Microsoft.Sql/servers', variables('sqlServerName'))]"
          ],
          "properties": {
            "collation": "SQL_Latin1_General_CP1_CI_AS",
            "edition": "Basic",
            "requestedServiceObjectiveName": "Basic"
          }
        }
      ]
    }
  ],
  "outputs": {}
}
